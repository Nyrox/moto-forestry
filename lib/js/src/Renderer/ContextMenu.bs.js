// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var $$String = require("bs-platform/lib/js/string.js");
var Tea_html = require("bucklescript-tea/lib/js/src-ocaml/tea_html.js");
var Tea_json = require("bucklescript-tea/lib/js/src-ocaml/tea_json.js");
var Tea_result = require("bucklescript-tea/lib/js/src-ocaml/tea_result.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var globalMenuState = {
  offsets: /* tuple */[
    0,
    0
  ]
};

function viewMenuItem(item) {
  var cb = item[1];
  console.log(cb);
  return Tea_html.button(undefined, undefined, /* :: */[
              Tea_html.onCB("click", "", (function (param) {
                      return Caml_option.some(cb);
                    })),
              /* [] */0
            ], /* :: */[
              Tea_html.text(item[0]),
              /* [] */0
            ]);
}

function viewMenuPopup(menu) {
  var match = globalMenuState.offsets;
  return Tea_html.div(undefined, undefined, /* :: */[
              Tea_html.class$prime("context-menu-popup"),
              /* :: */[
                Tea_html.style("left", $$String.concat("", /* :: */[
                          String(match[0]),
                          /* :: */[
                            "px",
                            /* [] */0
                          ]
                        ])),
                /* :: */[
                  Tea_html.style("top", $$String.concat("", /* :: */[
                            String(match[1]),
                            /* :: */[
                              "px",
                              /* [] */0
                            ]
                          ])),
                  /* [] */0
                ]
              ]
            ], List.map(viewMenuItem, menu));
}

function contextMenuContainer(createMsg, keyOpt, node, props, children) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var eventHandler = Tea_html.onCB("contextmenu", key, (function ($$event) {
          var mapper = Tea_json.Decoder.map2((function (x, y) {
                  globalMenuState.offsets = /* tuple */[
                    x,
                    y
                  ];
                  
                }), Tea_json.Decoder.field("clientX", Tea_json.Decoder.$$int), Tea_json.Decoder.field("clientY", Tea_json.Decoder.$$int));
          var error = Tea_result.error(Tea_json.Decoder.decodeEvent(mapper, $$event));
          if (error !== undefined) {
            console.log(error);
            return ;
          } else {
            console.log(createMsg);
            return Caml_option.some(createMsg);
          }
        }));
  return Curry._2(node, /* :: */[
              eventHandler,
              props
            ], children);
}

exports.globalMenuState = globalMenuState;
exports.viewMenuItem = viewMenuItem;
exports.viewMenuPopup = viewMenuPopup;
exports.contextMenuContainer = contextMenuContainer;
/* Tea_html Not a pure module */
